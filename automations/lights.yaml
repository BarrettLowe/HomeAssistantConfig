# Turn lights off when everyone leaves
- action:
  - data:
      entity_id: script.all_lights_away
    service: homeassistant.turn_on
  alias: Nobody Home
  condition: []
  id: '1524424713525'
  trigger:
  - entity_id: group.all_people
    from: home
    platform: state
    to: not_home

# Turn lights on when someone comes home
- action:
  - data:
      entity_id: group.family_room
    service: homeassistant.turn_on
  - data:
      entity_id: group.kitchen
    service: homeassistant.turn_on
  alias: Somebody Home
  condition: []
  id: '1524425355681'
  trigger:
  - entity_id: group.all_people
    from: not_home
    platform: state
    to: home

- alias: Pantry Auto On and Off
  action:
    - data:
        entity_id: light.pantry
        transition: 1
        brightness: 255
      service_template: >
        {% if trigger.to_state.state == 'off' and trigger.from_state.state == 'on' %}
        light.toggle
        {% else %}
        light.turn_on
        {% endif %}
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"
  trigger:
    entity_id: binary_sensor.pantry_door
    platform: state

- alias: Barretts Closet
  action:
    - data_template:
        entity_id: light.barretts_closet
        transition: 1
        brightness: >
          {% if states('binary_sensor.brandie_phone_charging') == 'on' %}
          100
          {% else %}
          255
          {% endif %}
      service_template: >
        {% if trigger.to_state.state == 'off' and trigger.from_state.state == 'on' %}
        light.toggle
        {% else %}
        light.turn_on
        {% endif %}
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"
  trigger:
    entity_id: binary_sensor.barretts_closet_door
    platform: state
    
- alias: Brandies Closet
  action:
    - data_template:
        entity_id: light.brandies_closet
        transition: 1
        brightness: >
          {% if states('binary_sensor.barrett_phone_charging') == 'on' %}
          100
          {% else %}
          255
          {% endif %}
      service_template: >
        {% if trigger.to_state.state == 'off' and trigger.from_state.state == 'on' %}
        light.toggle
        {% else %}
        light.turn_on
        {% endif %}
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"
  trigger:
    entity_id: binary_sensor.brandies_closet_door
    platform: state

- alias: Outdoor Lights On At Night
  trigger:
  - event: sunset
    platform: sun
    offset: "-00:45:00"
  condition: []
  action:
    - entity_id: group.front_yard, group.back_yard
      service: homeassistant.turn_on
    - data:
        entity_id: light.driveway
        rgb_color:
          - 255
          - 255
          - 125
        brightness: 255
      service: homeassistant.turn_on
    - condition: state
      entity_id: input_boolean.christmas_time
      state: 'on'
    - entity_id: switch.christmas_tree
      service: homeassistant.turn_on

- alias: Nighttime lights off
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == (state_attr('input_datetime.outside_lights_off_time', 'timestamp') | int | timestamp_custom('%H:%M', False)) }}"
  action:
    - service: homeassistant.turn_off
      entity_id: group.front_yard, group.back_yard
    - condition: state
      entity_id: input_boolean.christmas_time
      state: 'on'
    - entity_id: switch.christmas_tree
      service: homeassistant.turn_off

- alias: Under Cabinet Lights Daytime
  trigger:
    entity_id: switch.kitchen_crappy
    platform: state
  action:
    - data_template:
        transition: 3
        white_value: 0
        brightness: 255
        rgb_color:
          - >-
              {% if trigger.to_state.state == 'on' %} 
                {{ states('input_number.cabinet_daytime_red') | int }} 
              {% else %} 
                0
              {% endif %}
          - >-
              {% if trigger.to_state.state == 'on' %} 
                {{ states('input_number.cabinet_daytime_green') | int }} 
              {% else %} 
                0 
              {% endif %}
          - >-
              {% if trigger.to_state.state == 'on' %} 
                {{ states('input_number.cabinet_daytime_blue') | int }} 
              {% else %} 
                0 
              {% endif %}
      entity_id: light.under_cabinet_lights
      service_template: >
        {% if trigger.to_state.state == 'on' %}
          light.turn_on
        {% else %} 
          light.toggle
        {% endif %}
  condition:
    condition: and
    conditions:
      - condition: sun
        after: sunrise
        after_offset: "-00:30:00"
      - condition: sun
        before: sunset
        before_offset: "-00:30:00"
    
- alias: Under Cabinet Lights Nighttime
  trigger:
    entity_id: switch.kitchen_crappy
    platform: state
  action:
    - data_template:
        transition: > 
          {% if trigger.to_state.state == 'off' and trigger.from_state.state == 'on' %}
            5
          {% else %}
            1
          {% endif %}
        white_value: 0
        brightness: >
          {% if trigger.to_state.state == 'on' and trigger.from_state.state == 'off' %} 
            255
          {% else %}
            133
          {% endif %}
        rgb_color:
          - >-
              {% if trigger.to_state.state == 'on' and trigger.from_state.state == 'off' %} 
                {{ states('input_number.cabinet_daytime_red') | int }} 
              {% else %} 
                {{ states('input_number.cabinet_nighttime_red') | int }} 
              {% endif %}
          - >-
              {% if trigger.to_state.state == 'on' and trigger.from_state.state == 'off' %} 
                {{ states('input_number.cabinet_daytime_green') | int }} 
              {% else %} 
                {{ states('input_number.cabinet_nighttime_green') | int }} 
              {% endif %}
          - >-
              {% if trigger.to_state.state == 'on' and trigger.from_state.state == 'off' %} 
                {{ states('input_number.cabinet_daytime_blue') | int }} 
              {% else %} 
                {{ states('input_number.cabinet_nighttime_blue') | int }} 
              {% endif %}
      entity_id: light.under_cabinet_lights
      service: light.turn_on
  condition:
    condition: or
    conditions:
      - condition: sun
        before: sunrise
        before_offset: "-00:30:00"
      - condition: sun
        after: sunset
        after_offset: "-00:30:00"
        
- alias: christmas_tree_movement_on
  condition:
    condition: state
    entity_id: input_boolean.christmas_time
    state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.living_room_motion
    from: 'off'
    to: 'on'
  action: 
    service: homeassistant.turn_on
    entity_id: switch.christmas_tree
    
- alias: christmas_tree_movement_off
  condition:
    condition: state
    entity_id: input_boolean.christmas_time
    state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.living_room_motion
    from: 'on'
    to: 'off'
    for: '00:10:00'
  action: 
    service: homeassistant.turn_off
    entity_id: switch.christmas_tree

- alias: Entry Light On
  trigger:
    platform: state
    entity_id: binary_sensor.front_door
    from: 'off'
    to: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: light.entry

- alias: Entry Light Off
  trigger:
    platform: state
    entity_id: binary_sensor.front_door
    from: 'on'
    to: 'off'
    for: 00:05:00
  action:
    service: homeassistant.turn_off
    entity_id: light.entry    

- alias: Start The Day
  trigger:
    platform: state
    entity_id: binary_sensor.hallway_motion
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.interior
        state: 'off'
      - condition: time
        after: "00:04:30"
      - condition: sun
        before: sunrise
  action:
    service: homeassistant.start
    entity_id: script.morning_routine